if {kickstartedBootLoaderIsUefi}
then
        
    cd "{automationWorkerLinuxBaseDirectory}/build-{newOsNode.fqn}"
    
    ISO="{automationWorkerLinuxBaseDirectory}/kickstart_{newOsNode.fqn}.iso"
    echo "ISO=${ISO}"
    
    if uname | \
        grep -iq "darwin"
    then
        export PATH="${HOME}/Parallels/homebrew/bin:$PATH"
        echo "Using $(which xorriso)"
        
        xorriso -as mkisofs \
            -iso-level 4 \
            -full-iso9660-filenames \
            -rock \
            -b BOOT/etfsboot.com \
            -no-emul-boot \
            -boot-load-size 8 \
            -hide boot.catalog \
            -eltorito-alt-boot \
            -no-emul-boot \
            -b efi/microsoft/boot/efisys.bin \
            -boot-load-size 1 \
            -untranslated-filenames \
            -disable-deep-relocation \
            -o "${ISO}" \
            winpe_staging
    else
        
        mkisofs \
            -iso-level 4 \
            -full-iso9660-filenames \
            -rock \
            -b BOOT/etfsboot.com \
            -no-emul-boot \
            -boot-load-size 8 \
            -hide boot.catalog \
            -eltorito-alt-boot \
            -no-emul-boot \
            -b efi/microsoft/boot/efisys.bin \
            -boot-load-size 1 \
            -untranslated-filenames \
            -disable-deep-relocation \
            -o "${ISO}" \
            winpe_staging
    fi
else
    echo "Skipping for BIOS boot."
fi